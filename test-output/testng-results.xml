<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-18T01:38:35 IST" name="Demo Blaze Suite" finished-at="2025-02-18T01:40:17 IST" duration-ms="101490">
    <groups>
      <group name="Positive TestCases">
        <method signature="DB_LoginTest.validUserLogin(java.lang.String,java.lang.String)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" name="validUserLogin" class="nnd.TestCases.DB_LoginTest"/>
      </group> <!-- Positive TestCases -->
      <group name="Negative TestCases">
        <method signature="DB_LoginTest.inValidUserLogin(java.lang.String,java.lang.String)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" name="inValidUserLogin" class="nnd.TestCases.DB_LoginTest"/>
      </group> <!-- Negative TestCases -->
    </groups>
    <test started-at="2025-02-18T01:38:35 IST" name="Demo Blaze Functional Tests" finished-at="2025-02-18T01:40:17 IST" duration-ms="101490">
      <class name="nnd.TestCases.DB_HomeTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:nnd.TestCases.DB_HomeTest@ceb4bd2]" started-at="2025-02-18T01:40:05 IST" name="setUp" finished-at="2025-02-18T01:40:09 IST" duration-ms="4202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void nnd.TestCases.DB_HomeTest.verifyPurchaseItem() throws org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1e5cded6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPurchaseItem()[pri:0, instance:nnd.TestCases.DB_HomeTest@ceb4bd2]" started-at="2025-02-18T01:40:09 IST" name="verifyPurchaseItem" description="HomeTest_TC01" finished-at="2025-02-18T01:40:17 IST" depends-on-methods="nnd.TestCases.DB_LoginTest.validUserLogin" duration-ms="8002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPurchaseItem -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:nnd.TestCases.DB_HomeTest@ceb4bd2]" started-at="2025-02-18T01:40:17 IST" name="tearDown" finished-at="2025-02-18T01:40:17 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- nnd.TestCases.DB_HomeTest -->
      <class name="nnd.TestCases.DB_LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:23 IST" name="setUp" finished-at="2025-02-18T01:39:26 IST" duration-ms="3267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void nnd.TestCases.DB_LoginTest.validUserLogin(java.lang.String,java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1e5cded6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validUserLogin(java.lang.String,java.lang.String)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:26 IST" name="validUserLogin" description="LoginTest_TC01 Valid User Login" data-provider="validloginData" finished-at="2025-02-18T01:39:31 IST" duration-ms="5367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dhan01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dhan@01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:31 IST" name="tearDown" finished-at="2025-02-18T01:39:32 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:32 IST" name="setUp" finished-at="2025-02-18T01:39:35 IST" duration-ms="3389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void nnd.TestCases.DB_LoginTest.validUserLogin(java.lang.String,java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1e5cded6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validUserLogin(java.lang.String,java.lang.String)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:35 IST" name="validUserLogin" description="LoginTest_TC01 Valid User Login" data-provider="validloginData" finished-at="2025-02-18T01:39:40 IST" duration-ms="5351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dhan6000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dhan@6000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:40 IST" name="tearDown" finished-at="2025-02-18T01:39:40 IST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:40 IST" name="setUp" finished-at="2025-02-18T01:39:44 IST" duration-ms="3841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void nnd.TestCases.DB_LoginTest.inValidUserLogin(java.lang.String,java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1e5cded6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="inValidUserLogin(java.lang.String,java.lang.String)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:44 IST" name="inValidUserLogin" description="LoginTest_TC01 inValid User Login" data-provider="invalidloginData" finished-at="2025-02-18T01:39:53 IST" duration-ms="8380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dhan0001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dhan#0001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inValidUserLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:53 IST" name="tearDown" finished-at="2025-02-18T01:39:53 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:53 IST" name="setUp" finished-at="2025-02-18T01:39:56 IST" duration-ms="3287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void nnd.TestCases.DB_LoginTest.inValidUserLogin(java.lang.String,java.lang.String) throws org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1e5cded6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="inValidUserLogin(java.lang.String,java.lang.String)[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:39:56 IST" name="inValidUserLogin" description="LoginTest_TC01 inValid User Login" data-provider="invalidloginData" finished-at="2025-02-18T01:40:04 IST" duration-ms="8343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dhan0002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dhan#0002]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inValidUserLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:nnd.TestCases.DB_LoginTest@3c1e23ff]" started-at="2025-02-18T01:40:04 IST" name="tearDown" finished-at="2025-02-18T01:40:05 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- nnd.TestCases.DB_LoginTest -->
      <class name="nnd.TestCases.DB_RegisterTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:nnd.TestCases.DB_RegisterTest@405325cf]" started-at="2025-02-18T01:38:37 IST" name="setUp" finished-at="2025-02-18T01:38:42 IST" duration-ms="5389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void nnd.TestCases.DB_RegisterTest.invalidUserSignUp(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1e5cded6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidUserSignUp(java.lang.String,java.lang.String)[pri:0, instance:nnd.TestCases.DB_RegisterTest@405325cf]" started-at="2025-02-18T01:38:42 IST" name="invalidUserSignUp" description="RegisterTest_TC02 invalid user sign Up " data-provider="invalidUserData" finished-at="2025-02-18T01:38:53 IST" duration-ms="10368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dhan01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dhan@01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserSignUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:nnd.TestCases.DB_RegisterTest@405325cf]" started-at="2025-02-18T01:38:53 IST" name="tearDown" finished-at="2025-02-18T01:38:53 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:nnd.TestCases.DB_RegisterTest@405325cf]" started-at="2025-02-18T01:38:53 IST" name="setUp" finished-at="2025-02-18T01:38:56 IST" duration-ms="3452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void nnd.TestCases.DB_RegisterTest.invalidUserSignUp(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1e5cded6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidUserSignUp(java.lang.String,java.lang.String)[pri:0, instance:nnd.TestCases.DB_RegisterTest@405325cf]" started-at="2025-02-18T01:38:56 IST" name="invalidUserSignUp" description="RegisterTest_TC02 invalid user sign Up " data-provider="invalidUserData" finished-at="2025-02-18T01:39:07 IST" duration-ms="10919" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dhan6000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dhan@6000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserSignUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:nnd.TestCases.DB_RegisterTest@405325cf]" started-at="2025-02-18T01:39:07 IST" name="tearDown" finished-at="2025-02-18T01:39:07 IST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method,org.testng.ITestContext)[pri:0, instance:nnd.TestCases.DB_RegisterTest@405325cf]" started-at="2025-02-18T01:39:07 IST" name="setUp" finished-at="2025-02-18T01:39:11 IST" duration-ms="3192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void nnd.TestCases.DB_RegisterTest.validUserSignUp() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@1e5cded6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validUserSignUp()[pri:0, instance:nnd.TestCases.DB_RegisterTest@405325cf]" started-at="2025-02-18T01:39:11 IST" name="validUserSignUp" description="RegisterTest_TC01 valid user sign Up " finished-at="2025-02-18T01:39:21 IST" duration-ms="10787" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Signup failed expected [Sign up successful.] but found [This user already exist.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Signup failed expected [Sign up successful.] but found [This user already exist.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at nnd.Pages.DB_RegisterPage.clickSignUp(DB_RegisterPage.java:67)
at nnd.TestCases.DB_RegisterTest.validUserSignUp(DB_RegisterTest.java:59)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserSignUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:nnd.TestCases.DB_RegisterTest@405325cf]" started-at="2025-02-18T01:39:23 IST" name="tearDown" finished-at="2025-02-18T01:39:23 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- nnd.TestCases.DB_RegisterTest -->
    </test> <!-- Demo Blaze Functional Tests -->
  </suite> <!-- Demo Blaze Suite -->
</testng-results>
